plugins {
	id 'multiloader-common'
	id 'net.neoforged.moddev.legacyforge'
}

legacyForge {
	mcpVersion = minecraft_version
	if (file("src/main/resources/META-INF/accesstransformer.cfg").exists()) {
		accessTransformers = ["src/main/resources/META-INF/accesstransformer.cfg"]
	}
	parchment {
		minecraftVersion = parchment_minecraft
		mappingsVersion = parchment_version
	}
}

dependencies {
	compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
	implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

	implementation "com.google.auto.service:auto-service:1.1.1"
	annotationProcessor "com.google.auto.service:auto-service:1.1.1"

	compileOnly "org.joml:joml:1.10.5"
	compileOnly "org.joml:joml-primitives:1.10.0"

	modCompileOnly "org.valkyrienskies:valkyrienskies-120-common:${vs2_version}"

	modCompileOnly "org.valkyrienskies.core:api:${vs_core_version}"
	modCompileOnly "org.valkyrienskies.core:api-game:${vs_core_version}"
	modCompileOnly "org.valkyrienskies.core:util:${vs_core_version}"
	modCompileOnly "org.valkyrienskies.core:impl:${vs_core_version}"
}

configurations {
	commonJava {
		canBeResolved = false
		canBeConsumed = true
	}
	commonResources {
		canBeResolved = false
		canBeConsumed = true
	}
}

artifacts {
	commonJava sourceSets.main.java.sourceDirectories.singleFile
	commonResources sourceSets.main.resources.sourceDirectories.singleFile
}
